<?xml version="1.0" encoding="UTF-8"?>
<persistence version="1.0" xmlns="http://java.sun.com/xml/ns/persistence" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd">
  <!-- EntityManager对象的事务管理方式，对于J2EE环境下的Web容器，不能使用容器托管的EntityManager，只能使用应用托管：JTA，RESOURCE_LOCAL -->
  <!-- RESOURCE_LOCAL事务数据库本地的事务。它是数据库级别的事务，只能针对一种数据库，不支持分布式的事务。 -->
  <!-- 采用RESOURCE_LOCAL管理事务时，要保证数据库支持事务。例如使用MySQL时，需要设置数据库的引擎类型为“InnoDB”，而“MyISAM”类型是不支持事务的。 -->
  <persistence-unit name="VMC_PU" transaction-type="RESOURCE_LOCAL">
    <provider>org.hibernate.ejb.HibernatePersistence</provider>
    
    <!-- 这里面也可以映射数据库中的表和对应的实体类 -->
    <!-- 它的文档定义Schema可以从http://java.sun.com/xml/ ns/persistence/persistence_1_0.xsd下载到 -->
    <!-- name表示实体管理器的名称，在SessionBean中可以通过注释来获得该实体管理器。transaction-type定义了实体管理器事务处理的策略，本例中设置为“JTA”表示使用容器的事务处理。 -->
    <properties>
        <property name="hibernate.show_sql" value="true" />
        <property name="hibernate.use_sql_comments" value="true" />
		<property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect"/>
		<property name="hibernate.connection.driver_class" value="com.mysql.jdbc.Driver" />
    
       
        <!-- 京南数据库配置 -->	
        <property name="hibernate.connection.username" value="appcloud3.5"/>
      	<property name="hibernate.connection.password" value="appcloud3.5"/>
  		<property name="hibernate.connection.url" value="jdbc:mysql://210.14.159.231:3306/freeidc?zeroDateTimeBehavior=convertToNull"/> 
         
        
        <!--
         <!-- 实验室数据库配置 -->
      	<property name="hibernate.connection.username" value="root"/>
      	<property name="hibernate.connection.password" value="telestar"/>
  		<property name="hibernate.connection.url" value="jdbc:mysql://daas.free4lab.com:3306/appcloud_performance?zeroDateTimeBehavior=convertToNull"/>
         -->
         
      <!--数据库配置  -->
      <property name="hibernate.cache.provider_class" value="org.hibernate.cache.NoCacheProvider"/>
      <!-- 使用 c3p0 连接池 -->
      <property name="connection.provider_class" value="org.hibernate.connection.C3P0ConnectionProvider" />
      <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数 -->
      <property name="hibernate.c3p0.acquire_increment" value="1" />
      <!--检查所有连接池中的空闲连接时间间隔 -->
      <property name="hibernate.c3p0.idle_test_period" value="3000" />
      <!--连接池中保留的最大,最小连接数 -->
      <property name="hibernate.c3p0.max_size" value="20" />
      <property name="hibernate.c3p0.min_size" value="10" />
      <!--最大空闲时间,期内未使用则连接被丢弃。若为0则永不丢弃。
          自动检测空闲时间,MySQL默认的timeout时间为8小时 -->
      <property name="hibernate.c3p0.timeout" value="3600" />
      <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 -->
      <property name="acquireRetryAttempts">30</property>
      <!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->
      <property name="initialPoolSize">3</property>
      <!--JDBC的标准参数，用以控制数据源内加载的PreparedStatements数量。
      但由于预缓存的statements属于单个connection而不是整个连接池。
      所以设置这个参数需要考虑到多方面的因素。
      如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0-->
      <property name="hibernate.c3p0.max_statements" value="0" />
      <property name="hibernate.c3p0.max_statements_per_connection" value="0"/>
      <property name="hibernate.c3p0.preferredTestQuery" value="select 1;" />
    </properties>
  </persistence-unit>
</persistence>
